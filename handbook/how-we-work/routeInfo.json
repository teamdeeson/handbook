{"path":"handbook/how-we-work","templateID":0,"sharedPropsHashes":{"menuItems":"Z1mjJza"},"localProps":{"page":{"id":"XWag3RAAAB4AEkvD","type":"page","slug":"handbook/how-we-work","title":"How we work","content":"<p>Our <a  href=\"https://handbook.deeson.co.uk/handbook/our-delivery-process/\">delivery process</a> has evolved a lot over the years, in recent years, we have heavily invested in building a strong culture around agile principles. </p><p>However, we acknowledged that this wasn’t enough, with many agencies playing lip service to agile, we wanted to be different and we pride ourselves on an agile process which allows both flexibility and control.</p><p>With help from the <a  href=\"https://www.agilebusiness.org\">Agile Business Consortium</a>, we have adapted the <a  href=\"https://agilekrc.com/resource/168/what-dsdm-and-8-principles\">DSDM framework</a> to successfully deliver on time and on budget projects for our clients.</p><p>Our projects consist of a number of key phases: Pre-project → Feasibility → Foundations → Design Direction → Evolutionary Development</p><p>All projects consist of a Feasibility and Foundations phase before we commence development.</p><h3>What is Foundations? </h3><p>All our projects start off with a Foundations phase. Foundations is a term in DSDM - the agile method we follow at Deeson, in other places this phase might be referred to as <em>discovery</em>. </p><p>The primary purpose of this phase is to </p><p>“ensure we design and build a solution which is fit for purpose and we move fast when we start development.”</p><p>Here are some of the activities that typically happen in this phase </p><ul><li>Stakeholder interviews</li><li>User interviews  </li><li>Desk research </li><li>Solution design workshops</li><li>Wireframing </li><li>User journey mapping</li><li>User story mapping </li><li>Prototyping </li><li>User testing </li><li>Design direction </li><li>Technical investigations also known as technical spikes </li><li>Project planning </li></ul><p>However, there is no one size fits all and therefore the activities will vary project to project depending on the size of the project, how well defined the solution is, and how much research has been done to date. </p><p>Instead of focusing on deliverables, our teams are encouraged to focus on the outcomes which will ensure everyone involved is confident to commence development. These outcomes are:</p><ul><li>Design direction signed off</li><li>Technical strategy defined and challenges de-risked</li><li>Development environments set up<br />undefinedundefinedundefinedundefined</li><li>First Timebox of user stories refined and estimated </li><li>A component list which reflects our current understanding of the scope of the project </li><li>Epic sizing to convey split of budget across epics </li><li>Testing strategy </li><li>A delivery plan </li><li><a  href=\"https://docs.google.com/spreadsheets/d/1rhBATy_HzRGf6mIrocg5U6QLYRZ4jVmQ_5_G8WmE804/edit#gid=0\">Risk register</a></li></ul><p>So who is responsible for what? </p><p><strong>Outcome</strong></p><p><strong>Accountable </strong></p><p>Design direction</p><p>Design lead on the project </p><p>Development environment setup </p><p>Lead developer</p><p>First Timebox of user stories created and refined (i.e. acceptance criteria added with design links) and approved by the client </p><p>UX lead </p><p>First Timebox of user stories estimated</p><p>Lead developer</p><p>Epic sizing</p><p>Lead developer </p><p>A component list reflecting our understanding of the scope of the project</p><p>UX lead</p><p>Delivery plan</p><p>Delivery manager</p><p>Test strategy</p><p>Lead developer</p><p>Risk register</p><p>Delivery manager (Lead developer and UX Lead responsible for filling it with the risks)</p><p></p><p>A more detailed list of tasks and accountabilities can be referenced <a  href=\"https://docs.google.com/spreadsheets/d/1ZZPSD_wVkNfdnf45e2TIWQe5fbkKRBy9mg4K45eu-3M/edit#gid=1077684831\">here</a>.</p><h4>Things to factor in / consider as part of planning </h4><ul><li>Billable travel </li></ul><p>If you’re going to be on-site with the client make sure that for any workshops your Forecast time reflects the amount of time you’ll be billing e.g. it factors in travel time </p><ul><li>Handover between lead developer and rest of the development team </li></ul><p>This needs to be factored both into the budget for Foundations and in Forecast </p><h4>How we manage projects</h4><p>We use <a  href=\"https://deeson.atlassian.net\">JIRA</a>, as our project management tool. JIRA can be configured in a few different ways. We have adopted a <a  href=\"https://www.deeson.co.uk/labs/well-defined-stories-key-eliminating-work-flow-delays\">dual board process</a> which separates the <em>refinement</em> of tickets from tickets which are ready to be worked on. Often agile is an excuse for laziness and tickets can often make it into development without clear requirements or having had the insights from a multi-disciplinary team. This workflow ensures the key project roles all have the opportunity to input into a ticket before it’s worked on.</p><p><strong>The prep board</strong></p><p>Purpose: this is where you can view upcoming tickets planned for future Timeboxes. </p><p>Activities that are undertaken here: acceptance criteria are added, designs are added, estimates are provided and once approved the tickets are moved to ‘Ready for sprint’. At this point, we deem the ticket ready to be worked on. Tickets are then either moved to the next Timebox or to the backlog.   </p><p><strong>The work board</strong></p><p>Purpose: this is where you can view tickets currently being actively worked on during a Timebox. </p><p>Activities: this is where tickets are implemented, internally tested and then reviewed and approved by yourself.</p><p><strong>The backlog</strong></p><p>Purpose: This is a holding space for tickets that have been fully refined i.e. have been through the prep board process and are ready to be worked on in a future Timebox.</p><h4>Timebox best practice</h4><p>All team members are responsible for ensuring:</p><ul><li>Tickets are assigned to the correct individual </li><li>Tickets are in the correct column i.e. the status reflects the progress of the ticket</li><li>When you move a ticket you also add a comment explaining what the next action is and for who e.g. “Rachael this is now ready for you to test” or “I’ve fixed that issue, please can you re-test”</li><li>Time remaining is accurate and realistic (this should be updated at least once per day)</li><li>When a ticket is ready to be tested you notify the person responsible for testing on your project via Slack rather than JIRA</li><li>When a ticket fails QA - you take responsibility to screen share or pair with a designer to avoid JIRA tennis </li><li>You raise blockers* on stand up or on Slack and bring that attention to both the lead developer and Delivery Manager on the project</li><li>You manage your allocated budget and inform the lead developer and Delivery Manager at the earliest opportunity if you think you need more or less time scheduled </li><li>You raise to the lead developer / Delivery Manager if a ticket goes overestimate - this will allow us to ensure the Timebox goal is still achievable and don’t put unnecessary pressure on you or the team if something has arisen that we couldn’t have planned for</li></ul><p>Tracking time and budget</p><p><strong>Harvest</strong></p><p>Harvest is where you log all your time, both billable work and nonbillable. This is what we use to invoice clients, it’s therefore really important that your timesheets are accurate and that you’re logging your time to the correct project. </p><p>Some clients request a breakdown of where the budget was spent at the end of each month, it’s therefore important that you also add a clear description detailed what you were doing - where possible reference a JIRA ticket. </p><p><strong>JIRA </strong></p><p>JIRA has its own time tracking tool, we don’t use this data for invoicing but we do use it regularly to check we’re on track to deliver each Timebox. Most developers find it useful to log time in Harvest and then update JIRA once at the end of the day or before stand up to match their Harvest.</p><p>The time remaining on a ticket will normally automatically update when you log time to the ticket, however, sometimes the time remaining will not match the time you’re exactly anticipating to spend e.g. a ticket could have been more or less complex than you had anticipated. In this eventuality, it’s also important to update the time remaining to match how much time you think you’re likely to spend on this ticket before it’s considered <em>done</em>. </p><p>When a ticket passes through PR/internal testing, you’ll be encouraged to reduce the time remaining if you have more than ~30 minutes left so we’re not over accounting when we’re looking at how much work we have left to do.</p><p><strong>Forecast </strong></p><p>Forecast is a scheduling tool, this is where you’ll be able to see what you’re working on from day to day and week to week. You’re in charge of making sure Forecast matches up with what you’re planning to work on. Harvest and Forecast integrate nicely together which enables project teams to see when they’re likely to overspend or underspend. individual team members are responsible for managing their own budget allocations.</p><p><strong>How do I manage my budget?</strong></p><p></p><p>Within Harvest, you should have access to view each project you’re working on. Under the ‘Team’ tab, you should see your name and allocated budget and spend to date with the remaining budget on the right. If you hover on the Forecasted spend you should see how many future scheduled hours you have. You can then compare your forecasted hours with your remaining budget, your Forecast spend should now exceed your remaining budget. </p><p>If it does and you think you need the full amount you have left scheduled - let your delivery manager know. </p><p>If you have more time scheduled than you think you need, update your Forecast to reflect that.</p><p>Stand ups </p><p>A good stand up is more than just a status update or a time to do JIRA admin - it’s a useful and productive conversation about delivery. A chance to collaborate, ask for help and ensures team members are joined up i.e. working as a team delivering against a Timebox goal rather than individuals delivering tickets </p><h5><strong>What we expect from you</strong></h5><ul><li>You&#39;re on time - ideally, arrive a minute or two before the stand-up starts </li><li>Mute yourself when you’re not speaking </li><li>You’ve reviewed the board and happy that the board is up-to-date</li><li>You can clearly and concisely articulate the following:<br />undefinedundefinedundefined</li></ul><p>*Commitments </p><p>Be specific about your commitment for the day e.g. I’m working to get these into “internal testing” or into “client acceptance”. It’s very difficult to Forecast and plan if you only state the ticket you’re planning to work on that day.</p><p>However, be realistic - don’t commit to more than is realistic or unachievable, it’s fine to say I’m unlikely to get this done today because of ‘x’ </p><p>What is a blocker?</p><p>Anything which is either getting in the way of you delivering your work and/or could potentially have an impact on the budget or commitment of the Timebox. That could be but is not limited to: </p><ul><li>A ticket taking longer than estimated </li><li>Being blocked by another team member e.g. you’re waiting on a PR to be reviewed or something to be tested</li><li>Competing project priorities i.e. your being pulled in multiple directions</li><li>Unclear requirements on the ticket </li></ul><p>User stories - best practice </p><ul><li>Acceptance Criteria are written in the <a  href=\"https://www.agilealliance.org/glossary/gwt/#q=~(infinite~false~filters~(postType~(~'page~'post~'aa_book~'aa_event_session~'aa_experience_report~'aa_glossary~'aa_research_paper~'aa_video)~tags~(~'given*20when*20then))~searchTerm~'~sort~false~sortDirection~'asc~page~1)\">Given, When, Then</a> format</li><li>Link to Zeplin</li><li>Test scenarios </li><li>Testing notes in the comments</li><li>Estimate (ideally no longer than a day)</li></ul><p>Pull request best practice.</p><p>Pull requests are an opportunity for you to receive feedback on your work. When you are a part of a team they are a good mechanism for ensuring that everyone on the team is aware of changes that are being made to the code.</p><p>When you finish the development work on a ticket you should submit a pull request using Bitbucket. Add all of the team members as reviewers and post a link on the project’s internal Slack channel. Drag the ticket to the PR column in Jira but don’t reassign it - getting a review is still your responsibility.</p><p>Pull requests are not a sign-off process, you are responsible for the code that you write and it’s up to you how you choose to respond to the advice that you receive.</p><p>When you are working on a task as part of a timeboxed project then you should submit a pull request for the work once it is completed. The code should be reviewed by at least one other team member, generally a lead developer, before you merge.</p><p>As a reviewer you should try to respond quickly to pull requests once they are submitted, balance the fact that your teammate is blocked until you review with the need to complete your own work and avoid distractions.</p><p>When you review a PR look out for:</p><ul><li>Inconsistencies in approach, </li><li>Sloppiness or code quality issues (e.g. coding standards not met, debug left behind)</li><li>Regressions, or fragile code which is likely to regress in the future</li><li>Security weaknesses </li></ul><p>.</p><p>Testing.</p><p>Developers are responsible for:</p><ul><li>Ensuring front end work matches Zeplin (this is where the signed off designs are)</li><li>All Acceptance criteria is met</li><li>That the functionality works i.e. you’ve tested the functionality described in the acceptance criteria with real test scenarios</li><li>You’ve undertaken device/browser testing on the agreed browsers for the client.</li><li>You’ve added test criteria to the ticket before passing it over for internal testing </li><li>Tickets should then be passed for usability and design testing by your UX/design leads on the project - this is a final sense check to check it makes sense from a usability point of view and that the acceptance criteria.</li></ul><p>Note, we have a company <a  href=\"https://www.browserstack.com/\">browserstack</a> account that can be used for cross-browser and device testing.</p><p>Test criteria example: <a  href=\"https://deeson.atlassian.net/browse/HNEC-18\">https://deeson.atlassian.net/browse/HNEC-18</a> </p><h3>Timebox kick-off agenda</h3><h3>Things to consider before kicking off the <em>first</em> Timebox of a new project:</h3><ul><li>Does everyone know when the Timebox is finishing and when the demo is?</li><li>Does everyone know what’s expected of them in terms of demoing their own work?</li><li>Share URL/testing login details and pin on the ext channel when first ticket is ready to be test</li><li>Is everyone clear on the workflow?</li><li>Is everyone clear on what’s expected of them prior to stand up e.g. updating time remaining, ensuring tickets are in the right column and tickets are assigned to the correct person?</li><li>Is everyone is clear on the browsers compatibility list?</li><li>Is everyone is clear who is going to undertake internal testing?</li><li>Is everyone is clear on process for adding testing notes and what good looks like?</li><li>Is the client clear about different outcomes for testing a ticket depending on if it passes or fails and how to add a bug?</li><li>Does the team know what the <a  href=\"https://docs.google.com/document/d/1ZytajDVpg7UwYw0yFPUZlNob9xgL3uwdjrK40odDB7M/edit\">definition of done and definition of ready is for this project</a>?</li></ul><h4>Things relevant to all Timebox kick off meetings</h4><ul><li>Does the Timebox goal feel realistic / achievable? A quick sense check with the team e.g. how confident are you of being able to fulfill the commitment? If there’s any ambiguity discuss it.</li><li>Are there any dependencies between stories?</li><li>Are the stories ordered in the order it makes sense to progress through them?</li><li>Is there a clear Timebox objective/goal that all the team feel able to commit to?</li><li>Are all the stories ‘Musts’ for the project?</li></ul><h1><strong>Appendix: Glossary</strong></h1><p><strong>Timebox: </strong>A two-week work cycle focused on delivering functionality that meets a specific goal. In theory these packages of work should be able to be released independently.</p><p><strong>Spike: </strong>A period of time allocated to explore technically complex work to help us de-risk before we start a task. </p><p></p>","lastModified":"2019-08-28T15:42:42+0000"}}}
